name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.10"]
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: dreamtools
      - uses: actions/checkout@v3
        with:
          repository: deeppavlov/dream
          path: dream
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dreamtools/requirements.txt
          pip install -r dreamtools/deeppavlov_dreamtools/tests/requirements-test.txt
          pip install black==22.8.0
      - name: Run codestyle
        run: black --line-length=120 --check dreamtools/.
      - name: Run unit tests
        run: cd dreamtools/deeppavlov_dreamtools/tests && pytest .
      - name: Store coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: dreamtools/deeppavlov_dreamtools/tests/.coverage

  coverage:
    needs: build
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Create coverage badge
        uses: tj-actions/coverage-badge-py@v1.8
      - name: Verify coverage badge changed
        uses: tj-actions/verify-changed-files@v9
        id: changed_files
        with:
          files: coverage.svg
      - name: Commit coverage badge
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "mtalimanchuk@gmail.com"
          git config --local user.name "Maxim Talimanchuk"
          git add coverage.svg
          git commit -m "Updated coverage.svg"
      - name: Push changes
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
