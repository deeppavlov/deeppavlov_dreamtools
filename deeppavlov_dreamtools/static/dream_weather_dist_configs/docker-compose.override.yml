services:
  agent:
    command: sh -c 'bin/wait && python -m deeppavlov_agent.run agent.pipeline_config=assistant_dists/dream_weather/pipeline_conf.json'
    environment:
      WAIT_HOSTS: ''
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}
  convers-evaluator-annotator:
    build:
      args:
        CONFIG: conveval.json
        DATA_URL: https://files.deeppavlov.ai/alexaprize_data/cobot_conveval2.tar.gz
        PORT: 8004
      context: .
      dockerfile: annotators/ConversationEvaluator/Dockerfile
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G
    env_file:
    - .env
    environment:
    - CUDA_VISIBLE_DEVICES=0
  dff-intent-responder-skill:
    build:
      args:
        INTENT_RESPONSE_PHRASES_FNAME: intent_response_phrases.json
        SERVICE_NAME: dff_intent_responder_skill
        SERVICE_PORT: 8012
      context: .
      dockerfile: skills/dff_intent_responder_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8012 --reload
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M
    env_file:
    - .env
  dff-weather-skill:
    build:
      args:
        SERVICE_NAME: dff_weather_skill
        SERVICE_PORT: 8037
      context: .
      dockerfile: skills/dff_weather_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8037 --reload --timeout 500
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1G
    env_file:
    - .env
  dialogpt:
    build:
      args:
        CONFIG_NAME: dialogpt_en.json
        N_HYPOTHESES_TO_GENERATE: 5
        PRETRAINED_MODEL_NAME_OR_PATH: microsoft/DialoGPT-medium
        SERVICE_NAME: dialogpt
        SERVICE_PORT: 8125
      context: .
      dockerfile: services/dialogpt/Dockerfile
    command: flask run -h 0.0.0.0 -p 8125
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G
    env_file:
    - .env
    environment:
    - CUDA_VISIBLE_DEVICES=0
    - FLASK_APP=server
  entity-detection:
    build:
      args:
        CONFIG: entity_detection_eng.json
        EL_TAG_CONFIG: src/el_tags_infer.json
        FINEGRAINED: 0
        LOWERCASE: 1
        PORT: 8103
        SEQ_TAG_CONFIG: src/wikipedia_entity_detection_distilbert.json
        SRC_DIR: annotators/entity_detection/
      context: .
      dockerfile: annotators/entity_detection/Dockerfile
    command: flask run -h 0.0.0.0 -p 8103
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 2.5G
    env_file:
    - .env
    environment:
    - FLASK_APP=server
    - CUDA_VISIBLE_DEVICES=0
  intent-catcher:
    build:
      args:
        CONFIG_NAME: intents_model_dp_config.json
        INTENT_PHRASES_PATH: intent_phrases.json
        SERVICE_PORT: 8014
      context: .
      dockerfile: annotators/IntentCatcherTransformers/Dockerfile
    command: python -m flask run -h 0.0.0.0 -p 8014
    deploy:
      resources:
        limits:
          memory: 3.5G
        reservations:
          memory: 3.5G
    env_file:
    - .env
    environment:
    - FLASK_APP=server
    - CUDA_VISIBLE_DEVICES=0
  ner:
    build:
      args:
        COMMIT: f5117cd9ad1e64f6c2d970ecaa42fc09ccb23144
        CONFIG: ner_case_agnostic_multilingual_bert_base_extended.json
        PORT: 8021
        SRC_DIR: annotators/NER_deeppavlov
      context: .
      dockerfile: annotators/NER_deeppavlov/Dockerfile
    command: flask run -h 0.0.0.0 -p 8021
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G
    env_file:
    - .env
    environment:
    - FLASK_APP=server
    - CUDA_VISIBLE_DEVICES=0
    tty: true
  sentseg:
    build:
      context: annotators/SentSeg
    command: flask run -h 0.0.0.0 -p 8011
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 1.5G
    env_file:
    - .env
    environment:
    - FLASK_APP=server
  spacy-nounphrases:
    build:
      context: .
      dockerfile: annotators/spacy_nounphrases/Dockerfile
    command: flask run -h 0.0.0.0 -p 8006
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M
    env_file:
    - .env
    environment:
    - FLASK_APP=server
  spelling-preprocessing:
    build:
      args:
        COMMIT: f5117cd9ad1e64f6c2d970ecaa42fc09ccb23144
        CONFIG: brillmoore_wikitypos_en.json
        LANGUAGE: EN
        PORT: 8074
        SRC_DIR: annotators/spelling_preprocessing_dp
      context: .
      dockerfile: annotators/spelling_preprocessing_dp/Dockerfile
    command: flask run -h 0.0.0.0 -p 8074
    deploy:
      resources:
        limits:
          memory: 6.5G
        reservations:
          memory: 6.5G
    env_file:
    - .env
    environment:
    - FLASK_APP=server
version: '3.7'
